{"version":3,"sources":["Component/CustomerList.js","Component/BidsDetails.js","App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","CustomerList","classes","useState","list","setList","custList","seCustList","history","useHistory","useEffect","a","axios","get","res","data","temp1","map","v","bids","length","amount","temp","sort","b","Math","max","console","log","getData","orderDir","setOrderDir","sortFun","c","min","handleSortFun","ordDir","minMax","bidMinMax","setBidMinMax","handleMinMax","ev","val","target","dataset","minmax","document","querySelector","classList","remove","add","React","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableSortLabel","active","direction","onClick","e","style","marginLeft","data-minmax","TableBody","slice","row","id","filter","push","alert","handleRowClick","scope","Avatar","alt","firstname","src","avatarUrl","lastname","email","phone","hasPremium","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","value","BidsDetails","props","location","useLocation","state","carTitle","moment","created","format","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.683d8ecc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableSortLabel,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport \"../css/customer-list.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction CustomerList() {\r\n  const classes = useStyles();\r\n  const [list, setList] = useState([]);\r\n  const [custList, seCustList] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        const res = await axios.get(\r\n          \"https://intense-tor-76305.herokuapp.com/merchants\"\r\n        );\r\n\r\n        seCustList(res?.data);\r\n        let temp1 = res?.data.map((v) => {\r\n          if (v.bids.length > 0) {\r\n            return v;\r\n          } else {\r\n            let bids = [\r\n              {\r\n                amount: 0,\r\n              },\r\n            ];\r\n            return { ...v, bids };\r\n          }\r\n        });\r\n        let temp = temp1.sort(\r\n          (a, b) =>\r\n            Math.max(...a?.bids.map((v) => v.amount)) -\r\n            Math.max(...b?.bids.map((v) => v.amount))\r\n        );\r\n        setList(temp);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  const [orderDir, setOrderDir] = useState(\"asc\");\r\n\r\n  const sortFun = (a, b, c) => {\r\n    if (c === \"max\") {\r\n      return (\r\n        Math.max(...a?.bids.map((v) => v.amount)) -\r\n        Math.max(...b?.bids.map((v) => v.amount))\r\n      );\r\n    } else if (c === \"min\") {\r\n      return (\r\n        Math.min(...a?.bids.map((v) => v.amount)) -\r\n        Math.min(...b?.bids.map((v) => v.amount))\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSortFun = (ordDir, minMax) => {\r\n    if (ordDir === \"asc\") {\r\n      minMax === \"max\"\r\n        ? list.sort((a, b) => sortFun(b, a, \"max\"))\r\n        : list.sort((a, b) => sortFun(b, a, \"min\"));\r\n    } else {\r\n      minMax === \"max\"\r\n        ? list.sort((a, b) => sortFun(a, b, \"max\"))\r\n        : list.sort((a, b) => sortFun(a, b, \"min\"));\r\n    }\r\n  };\r\n\r\n  const handleSort = (ev, ordDir) => {\r\n    if (!ev.target.dataset.minmax) {\r\n      setOrderDir(ordDir === \"asc\" ? \"desc\" : \"asc\");\r\n      handleSortFun(ordDir, bidMinMax);\r\n    }\r\n  };\r\n\r\n  const [bidMinMax, setBidMinMax] = useState(\"max\");\r\n  const handleMinMax = (ev, val) => {\r\n    if (ev.target.dataset.minmax) {\r\n      if (val === \"min\") {\r\n        handleSortFun(orderDir === \"asc\" ? \"desc\" : \"asc\", \"min\");\r\n        setBidMinMax(val);\r\n        document.querySelector(\".max\").classList.remove(\"active\");\r\n        document.querySelector(\".min\").classList.add(\"active\");\r\n      } else if (val === \"max\") {\r\n        handleSortFun(orderDir === \"asc\" ? \"desc\" : \"asc\", \"max\");\r\n        setBidMinMax(val);\r\n        document.querySelector(\".min\").classList.remove(\"active\");\r\n        document.querySelector(\".max\").classList.add(\"active\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRowClick = (id) => {\r\n    let temp = custList.filter((v) => v.id === id);\r\n    if (temp[0].bids.length > 0) {\r\n      history.push(\"/bids-details\", temp);\r\n    } else {\r\n      alert(\"No Data\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className=\"th__data\">Customer name</TableCell>\r\n              <TableCell className=\"th__data\">Email</TableCell>\r\n              <TableCell className=\"th__data\">Phone</TableCell>\r\n              <TableCell className=\"th__data\">Premium</TableCell>\r\n\r\n              <TableCell className=\"th__data\" align=\"right\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={orderDir}\r\n                  onClick={(e) => handleSort(e, orderDir)}\r\n                >\r\n                  <div style={{ marginLeft: \"10px\" }}>Bid</div>\r\n                  <span>\r\n                    <span\r\n                      data-minmax\r\n                      className=\"max active\"\r\n                      onClick={(e) => handleMinMax(e, \"max\")}\r\n                    >\r\n                      Max\r\n                    </span>{\" \"}\r\n                    /{\" \"}\r\n                    <span\r\n                      data-minmax\r\n                      className=\"min common\"\r\n                      onClick={(e) => handleMinMax(e, \"min\")}\r\n                    >\r\n                      Min\r\n                    </span>\r\n                  </span>\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {list\r\n              ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  className=\"tablRow\"\r\n                  onClick={() => handleRowClick(row.id)}\r\n                >\r\n                  <TableCell component=\"th\" className=\"name\" scope=\"row\">\r\n                    <div className=\"customer\">\r\n                      <div className=\"avatar\">\r\n                        <Avatar alt={row.firstname} src={row.avatarUrl} />\r\n                      </div>\r\n                      <div className=\"custname\">\r\n                        {row.firstname} {row.lastname}\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>{row.email}</TableCell>\r\n                  <TableCell>{row.phone}</TableCell>\r\n                  <TableCell>{row.hasPremium ? \"Yes\" : \"No\"}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {bidMinMax === \"max\"\r\n                      ? row?.bids.length > 0\r\n                        ? Math.max(...row?.bids.map((v) => v.amount))\r\n                        : \"0\"\r\n                      : row?.bids.length > 0\r\n                      ? Math.min(...row?.bids.map((v) => v.amount))\r\n                      : \"0\"}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        component=\"div\"\r\n        count={list?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomerList;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"../css/bids-details.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction BidsDetails(props) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  let list = location.state[0].bids;\r\n  console.log(location.state);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"BidsDetails\">\r\n      <h2>Bids Details</h2>\r\n\r\n      <TableContainer component={Paper}>\r\n        <div className=\"cuname\">\r\n          {location.state[0].firstname} {location.state[0].lastname}\r\n        </div>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className=\"th__data\">Car Title</TableCell>\r\n              <TableCell className=\"th__data\">Amount</TableCell>\r\n              <TableCell className=\"th__data\">Date</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {list\r\n              ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>{row.carTitle}</TableCell>\r\n                  <TableCell>{row.amount}</TableCell>\r\n                  <TableCell>{moment(row.created, \"x\").format(\"ll\")}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        component=\"div\"\r\n        count={list?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BidsDetails;\r\n","import \"./App.css\";\nimport CustomerList from \"./Component/CustomerList\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport BidsDetails from \"./Component/BidsDetails\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"App\">\n            <div className=\"customer__list\">\n              <CustomerList />\n            </div>\n          </div>\n        </Route>\n        <Route exact path=\"/bids-details\">\n          <div className=\"App\">\n            <BidsDetails />\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}